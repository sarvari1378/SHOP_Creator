name: Ultimate Fast and Resilient Add Item

on:
  workflow_dispatch:
    inputs:
      title:
        description: 'Item Code/Title'
        required: true
        type: string
      english_description:
        description: 'English Description'
        required: true
        type: string
      persian_description:
        description: 'Persian Description'
        required: true
        type: string
      image:
        description: 'Image Filename'
        required: true
        type: string

jobs:
  fast_update:
    runs-on: ubuntu-latest
    steps:
      # مرحله ۱: چک‌اوت فوق سریع با دانلود فقط یک فایل
      - name: Checkout only the data file
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            Data.json
          fetch-depth: 1 # شروع با یک کلون کم‌عمق برای حداکثر سرعت

      # مرحله ۲: آپدیت و پوش اتمیک با منطق نهایی ضد-تداخل
      - name: Atomically Update and Push
        env:
          ITEM_TITLE: ${{ github.event.inputs.title }}
          ITEM_DESC_EN: ${{ github.event.inputs.english_description }}
          ITEM_DESC_FA: ${{ github.event.inputs.persian_description }}
          ITEM_IMAGE: ${{ github.event.inputs.image }}
        run: |
          set -e

          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # برای اینکه git pull/push بتواند به درستی کار کند، باید از حالت چک‌اوت پراکنده خارج شویم.
          git sparse-checkout disable
          
          # برای push کردن، باید کل تاریخچه را داشته باشیم.
          # این دستور را فقط یک بار و خارج از حلقه اجرا می‌کنیم.
          git fetch --unshallow

          # حلقه تلاش مجدد با منطق "ریست کامل"
          for i in {1..5}
          do
            # ۱. آخرین اطلاعات را از سرور بگیر و ریپازیتوری محلی را دقیقاً مانند آن کن.
            # این کار هرگونه کامیت ناموفق یا تداخل قبلی را پاک می‌کند.
            git fetch origin main
            git reset --hard origin/main

            # ۲. حالا که روی آخرین نسخه هستیم، تغییرات خود را دوباره اعمال می‌کنیم
            DATA_FILE="Data.json"
            IMAGE_RAW_URL="https://raw.githubusercontent.com/${{ github.repository }}/main/Images/${ITEM_IMAGE}"
            
            add_newline_before_words() {
              local input="$1"
              local words=("Ring" "Silver" "Weight" "Type" "مديل" "نوع" "عيار" "الوزن")
              for word in "${words[@]}"; do
                input=$(echo "$input" | sed "s/\b$word\b/\n$word/g")
              done
              echo "$input"
            }

            FORMATTED_DESC_EN=$(add_newline_before_words "${ITEM_DESC_EN}")
            FORMATTED_DESC_FA=$(add_newline_before_words "${ITEM_DESC_FA}")
            
            json_content=$(cat $DATA_FILE)
            new_item=$(jq -n --arg title "$ITEM_TITLE" --arg englishDescription "$FORMATTED_DESC_EN" --arg persianDescription "$FORMATTED_DESC_FA" --arg image "$IMAGE_RAW_URL" '{title: $title, englishDescription: $englishDescription, persianDescription: $persianDescription, image: $image}')
            new_json=$(echo "$json_content" | jq ".items += [$new_item]")
            echo "$new_json" | jq '.' > $DATA_FILE

            # ۳. کامیت جدید را ایجاد و تلاش برای push می‌کنیم
            git add $DATA_FILE
            git commit -m "Added new item: $ITEM_TITLE"
            
            # اگر پوش موفق بود، با موفقیت خارج شو
            if git push; then
              echo "Push successful on attempt $i!"
              exit 0
            fi
            
            echo "Push failed on attempt $i. Retrying after a short random delay..."
            sleep $(shuf -i 1-3 -n 1) # یک تا سه ثانیه به صورت تصادفی صبر کن
          done

          echo "Error: Could not push changes after multiple attempts."
          exit 1
